name: Build, Push Docker Image, and Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest  # Ubuntu 환경에서 실행

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Java 21 및 Gradle 설정
    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'  # Java 21 설정
        distribution: 'temurin'

    - name: Set up Gradle
      uses: gradle/wrapper-validation-action@v1
      with:
        gradle-version: '8.13'  # 원하는 Gradle 버전 설정 (여기서는 8.13)
        distribution: 'https://services.gradle.org/distributions/gradle-8.13-bin.zip'

    - name: Build Spring Boot JAR using Gradle
      run: |
        ./gradlew clean build -x test  # Gradle을 사용하여 JAR 파일 빌드 (테스트는 생략)

  docker:
    runs-on: ubuntu-latest  # Ubuntu 환경에서 실행
    needs: build  # build 작업이 완료된 후 실행됨

    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub 사용자명
        password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub 비밀번호

    - name: Build Docker image
      run: |
        docker build -t acoursove2/springTest:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push acoursove2/springTest:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker  # docker 작업이 완료된 후 실행됨

    steps:
    - name: SSH into EC2 and deploy with Podman
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.AWS_SSH_KEY }} ubuntu@${{ secrets.AWS_EC2_IP }} << 'EOF'
          # EC2에서 Podman을 사용하여 Docker Hub에서 이미지 풀
          sudo podman pull ${{ secrets.DOCKER_USERNAME }}/springTest:latest
          
          # 기존 컨테이너가 실행 중이면 종료하고 새 컨테이너 실행
          sudo podman ps -q --filter "name=springTest" | xargs -I {} sudo podman stop {}
          sudo podman ps -a -q --filter "name=springTest" | xargs -I {} sudo podman rm {}
          
          # 새로운 컨테이너 실행
          sudo podman run -d --name springTest -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/springTest:latest
        EOF
